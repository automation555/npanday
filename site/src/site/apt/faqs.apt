 ------
  NPanday FAQ
 ------
 ------
  25 Feb 2009
 ------

NPanday Frequently Asked Questions

* Why is NPanday named as such?
  
  Since NPanday is a project that builds .NET Applications, we brainstormed for a name that would symbolize a great
  builder, a builder that would have more freedom from its predecessor.
  
  <<<Panday>>> is a bisaya word for carpenter/builder and at the same time <<<Panday>>> is a fictional Filipino comic
  hero that would fight monsters using a dagger which magically turns into a sword when raised into the sky. The
  materials of the dagger came from a meteorite that struck down on earth during the reign of the monsters and
  supernatural beings. <<<Panday>>> fights to bring back freedom and peace to the people once more.
  
* What are the requirements needed to run NPanday?

  You would need to install the following:
  
  * Java 1.5 or higher
  
  * Apache Maven 2.0.9 or higher
  
  []
  
* Do you need to have intensive knowledge of Apache Maven or Java in order to run NPanday?

  No. NPanday's Visual Studio Add-in can ensure the user will have minimal interaction with Apache Maven if desired,
  without any need to manipulate the POM.
  
* Can NPanday build projects outside of Visual Studio?

  Yes. Since the NPanday Visual Studio Addin creates a POM file from your corresponding .NET Project you can build your
  .NET Projects using standard Apache Maven commands.
  
* Why use NPanday when you can build .NET Applications in Visual Studio or MSBuild?

  By using NPanday, you can take advantage of existing development infrastructure that is compatible with Maven. This
  is particularly beneficial to organizations that have both Java and .NET development teams that want to share a
  common infrastructure stack.

  In addition, NPanday brings Maven's dependency management and other plugins (such as developer site generation) to
  .NET projects with little additional work needed.
  
* How can a custom <<<settings.xml>>> be used for the Visual Studio Addin?
  
  Add the <<<\-DsettingsFile\=\[path_to_custom_settings.xml_file\]>>> parameter when executing
  <<<mvn npanday.plugin:maven\-vsinstaller\-plugin:install>>>. For example,
  
  <<<mvn npanday.plugin:maven\-vsinstaller\-plugin:install \-DsettingsFile\="C:\\common\\settings.xml">>>
  
* How do I set the root namespace for a Visual Basic assembly?
  
  Add the <<< \<rootNameSpace\> >>> element under <<< \<configuration\> >>> inside the <<<maven-compile-plugin>>> plugin.
  Just like the following:
  
+--------------+ 
<plugin>
  <groupId>npanday.plugin</groupId>
  <artifactId>maven-compile-plugin</artifactId>
  <extensions>true</extensions>
  <configuration>
    <language>VB</language>
    <rootNameSpace>my.company</rootNameSpace>
  </configuration>
</plugin>
+--------------+
  

